# To run this playbook, use the following command and your credentials for loggin in:
#    ansible-playbook chrootpasswd.yml -Kk -i hosts.ini
# When prompted, enter new password

#- hosts: DB:WEB
- hosts: LB
  gather_facts: yes
#  become: no
#  become_user: root
#  remote_user: osc
  become: yes
  become_user: root
  become_method: sudo
  remote_user: osc

  tasks:
#    -name: "Get list of web hosts"
#     register: web_hosts

#  - debug:
#      msg: "my web server is {{ item }}"
#    with_items:
#      - "{{ groups['WEB'] }}"

#  - name: Get list of web hosts
#    command: "/bin/echo {{ item }}"
#    register: web_hosts
#    with_items:
#      - "{{ groups['WEB'] }}"

#  - debug:
#      msg: "my item is {{ item.stdout }}"
#    with_items:
#      - "{{ web_hosts.results }}"
  - block:
      - debug:
          msg: "inventory_hostname is {{ inventory_hostname }}"

  - name: Running Command for VLAN
#    shell: echo {{ inventory_hostname }} | awk -F"." '{print $3}' 
    shell: echo {{ inventory_hostname }} | cut -d "." -f -3
    register: vlan

  - block:
      - debug:
          msg: "inventory_hostname is {{ inventory_hostname }}"
      - debug:
          msg: "VLAN is {{ vlan.stdout }}"
      - debug:
          msg: "ansible_hostname is {{ ansible_hostname }}"

#  - name: Running Command for Hostname - this is the variable set in the hosts.ini
#    shell: echo {{ hostvars[inventory_hostname].hostname }} | awk -F"-" '{print $2}' 
#    shell: echo $HOSTNAME | awk -F"-" '{print $2}' 
#    register: hostname
  - debug:
      msg: "ansible_hostname is {{ ansible_hostname }}"

  - debug:
      msg: "ansible_hostname VLAN is {{ inventory_hostname.split('.')[2] }}"

  - debug: 
#      msg: "{{ hostvars['inventory_hostname']['nodename'] }}"
#      msg: "{{ hostvars }}"
#      msg: "{{ hostvars[ansible_hostname] }}"
# Just plain hostname of the current system
      msg: "ansible_hostname split {{ ansible_hostname.split('-')[1] }}"
#      msg: "{{ replica }}"
#      msg: "{{ repl_p }}"
#      msg: "Current system is {{ inventory_hostname }} in VLAN {{ vlan.stdout }}"
#      msg: "Current system is {{ hostvars[inventory_hostname] }}"
#      msg: "Replication  postion is {{ hostvars['inventory_item']['replica'] }}"

#  - debug: 
#      msg: "Replication  postion is {{ hostvars['inventory_item']['replica'] }}"
  - name: Set environment
    set_fact:
      env_type: "{{ ansible_hostname.split('-')[1] }}"

  - debug:
      msg: "env_type is {{ env_type }}"

  - name: Set variable
    set_fact:
      php_install: 1

  - debug:
      msg: "install php"
    when: php_install


  - name: Get all the ips of the hosts for the group
    set_fact:
      list_of_ips: "{{ groups['DB'] | map('extract',hostvars,'inventory_hostname') | join(' ') }}"

  - debug:
      msg: "{{ list_of_ips }}"

  - name: Get ip of the first LB
    set_fact:
#      list_of_ips: "{{ groups['LB'][0] | map('extract',hostvars,'inventory_hostname') | join(' ') }}"
      list_of_ips: "{{ groups['LB'][0] }}"

  - debug:
      msg: "{{ list_of_ips }}"

  - name: Get hostname of first LB
    set_fact:
#      hostname_funk: "{{ groups['LB'][0] | map('extract',hostvars,'ansible_hostname') }}"
      hostname_funk: "{{ hostvars[groups['LB'][0]]['ansible_hostname'] }}"
    run_once: yes


  - debug:
      msg: "{{ hostname_funk }}"
# 
#  - name: set force_restart
#    set_fact: 
#      force_restart: 1

  - debug:
      msg: "force_restart is not defined "
    when: force_restart is undefined

  - debug:
      msg: "force_restart env_type is {{ env_type }} "
    when: 
      - force_restart is defined 
      - force_restart

  - debug:
      msg: "{{ hostvars }}"
